AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for youtube downloader serverless backend'

# --------------------------------------------------------------------------------- #
# Global Variable About AWS Resources
# - Functions
#   : Lambda Function Default Memory Size & Timeout
# --------------------------------------------------------------------------------- #
Globals:
  Function:
    Timeout: 30
    MemorySize: 128


# --------------------------------------------------------------------------------- #
# Parmaters for template
# - TrimmedResultBucketName
#   : S3 Bucket Name
#
# - TrimCacheDynTableName
#   : DynamoDB Table Name
#
# - TrimCacheDynTablePartitionKey
#   : DynamoDB Partition Key name
#
# - TrimCacheDynTableSortKey
#   : DynamoDB Sort Key name
# --------------------------------------------------------------------------------- #

Parameters:
  TrimmedResultBucketName:
    Type: String
    Default: trim-result-bucket
  TrimCacheDynTableName:
    Type: String
    Default: trim-result-lookup-table
  TrimCacheDynTablePartitionKey:
    Type: String
    Default: VideoId
  TrimCacheDynTableSortKey:
    Type: String
    Default: Track
  DynGlobalSecondaryIndexKey:
    Type: String
    Default: UniqueTrackId


Resources:
# --------------------------------------------------------------------------------- #
# Definitions About AWS Resources which Composed Service 
# 1. S3 Bucket
#   - TrimResultBucket
#
# 2. DynamoDB
#   - TrimResultLookupTable
#
# 3. Lambda Functions
#   - GetTimestampsAboutYoutubeVideoFunction
#
#   - GetTimestampsAboutYoutubeVideoFunction
#   
#   - GetYoutubeVideoInfoFunction
#   
#   - LiveTrimYoutubeVideoFunction
#   
#   - PreSignedURLGenerateFunction
#   
#   - TrimResultLookupFunction
#
#   - ErrorReciverFunction
#
# 4. StepFunction
#   - YoutubeVideoTrimStateMachine
#
# 5. Lambda Layers
#   - SearchLayer
#
#   - FFmpegLayer
#
#   - Mp4Parserlayer
# --------------------------------------------------------------------------------- #
  TrimResultBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Ref TrimmedResultBucketName
    Metadata:
      SamResourceId: TrimResultBucket

  TrimResultLookupTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TrimCacheDynTableName
      AttributeDefinitions:
        - AttributeName: !Ref TrimCacheDynTablePartitionKey
          AttributeType: S
        - AttributeName: !Ref TrimCacheDynTableSortKey
          AttributeType: S
        - AttributeName: BucketName
          AttributeType: S
        - AttributeName: S3Key
          AttributeType: S
        - AttributeName: !Ref DynGlobalSecondaryIndexKey
          AttributeType: S

      KeySchema:
        - AttributeName: !Ref TrimCacheDynTablePartitionKey
          KeyType: HASH
        - AttributeName: !Ref TrimCacheDynTableSortKey
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: VideoTrackHash
          KeySchema:
            - AttributeName: !Ref DynGlobalSecondaryIndexKey
              KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY

      BillingMode: PAY_PER_REQUEST

  GetTimestampsAboutYoutubeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTimestampsAboutYoutubeVideoFunction
      CodeUri: functions/get-timestamp-advanced
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer
    Metadata:
      SamResourceId: GetTimestampsAboutYoutubeVideoFunction

  GetYoutubeVideoInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetYoutubeVideoInfoFunction
      CodeUri: functions/search
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer

    Metadata:
      SamResourceId: GetYoutubeVideoInfoFunction

# --------------------------------------------------------------------------------- #
# Definitions About Lambda Function : LiveTrimYoutubeVideoFunction
# --------------------------------------------------------------------------------- #

  LiveTrimYoutubeVideoFunctionSmall:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionSmall
      Description: "Trim Function which process light mp4 media (MemorySize: 512)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 512
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey
          DynGlobalSecondaryIndexKey:
            !Ref DynGlobalSecondaryIndexKey
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref TrimmedResultBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionSmall

  LiveTrimYoutubeVideoFunctionMedium:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionMedium
      Description: "Trim Function which process little heavy mp4 media (MemorySize: 1024)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 1024
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey
          DynGlobalSecondaryIndexKey:
            !Ref DynGlobalSecondaryIndexKey
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref TrimmedResultBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionMedium

  LiveTrimYoutubeVideoFunctionLarge:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionLarge
      Description: "Trim Function which process more heavy mp4 media (MemorySize: 2048)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 2048
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey
          DynGlobalSecondaryIndexKey:
            !Ref DynGlobalSecondaryIndexKey
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref TrimmedResultBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionLarge

  LiveTrimYoutubeVideoFunctionXLarge:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionXLarge
      Description: "Trim Function which process very heavy mp4 media (MemorySize: 3008)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 3008
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey
          DynGlobalSecondaryIndexKey:
            !Ref DynGlobalSecondaryIndexKey
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref TrimmedResultBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionXLarge

# --------------------------------------------------------------------------------- #
# End
# --------------------------------------------------------------------------------- #

  # PreSignedURLGenerateFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: PreSignedURLGenerateFunction
  #     CodeUri: functions/p-signed-generator
  #     Handler: app.lambda_handler
  #     Runtime: python3.9
  #     Architectures:
  #     - x86_64
  #     Role: !GetAtt PreSignedURLGenerateFunctionExecutionRole.Arn
  #     Environment:
  #       Variables:
  #         TrimmedResultBucket:
  #           !Ref TrimmedResultBucketName

  #     Policies:
  #       - S3CrudPolicy:
  #           BucketName:
  #             !Ref TrimmedResultBucketName
  # TrimStateMachineStartFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: TrimStateMachineStartFunction


  TrimResultLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TrimResultLookupFunction
      CodeUri: functions/trim-result-lookup
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt TrimLookupFunctionExecutionRole.Arn
      Environment:
        Variables:
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey

  ErrorReceiveFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ErrorReceiveFunction
      CodeUri: functions/err-receiver
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
    
    Metadata:
      SamResourceId: ErrorReceiveFunction
      

  YoutubeVideoTrimStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: YoutubeVideoTrimStateMachine
      # StateMachineType: EXPRESS
      Definition:
        Comment: "Youtube Video Live Streaming Trimming Stepfunction Workflow"
        StartAt: TrimResultLookup
        States:
          TrimResultLookup:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt TrimResultLookupFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next:
              LookupFunctionReturnCheckBrnach

          LookupFunctionReturnCheckBrnach:
            Type: Choice
            Choices:
              - Variable: $.statusCode
                NumericEquals: 200
                Next: LookupResultBranch
            Default: ErrReciver
          
          LookupResultBranch:
            Type: Choice
            Choices:
              - Variable: $.body.success
                BooleanEquals: true
                Next: PreSignedURLGenerate
              - Variable: $.body.success
                BooleanEquals: false
                Next: TrimHandlingBranch
          
          TrimHandlingBranch:
            Type: Choice
            Choices:
              - Variable: $.body.data.m_duration
                NumericLessThan: 1800
                Next: TrimSmall
              - And:
                  - Variable: $.body.data.m_duration
                    NumericGreaterThanEquals: 1800
                  - Variable: $.body.data.m_duration
                    NumericLessThan: 3600
                Next: TrimMedium
              - And:
                  - Variable: $.body.data.m_duration
                    NumericGreaterThanEquals: 3600
                  - Variable: $.body.data.m_duration
                    NumericLessThan: 7200
                Next: TrimLarge
              - Variable: $.body.data.m_duration
                NumericGreaterThanEquals: 7200
                Next: TrimXLarge
          
          TrimSmall:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionSmall.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next: PreSignedURLGenerate

          TrimMedium:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionMedium.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next: PreSignedURLGenerate

          TrimLarge:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionLarge.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next: PreSignedURLGenerate

          TrimXLarge:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionXLarge.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next: PreSignedURLGenerate

          ErrReciver:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt ErrorReceiveFunction.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End:
              true

          PreSignedURLGenerate:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt PreSignedURLGenerateFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End:
              true
      RoleArn: !GetAtt YoutubeVideoTrimStepFunctionRole.Arn
      
  SearchLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layer/search-layer
      CompatibleRuntimes:
      - python3.9
    Metadata:
      BuildMethod: python3.9
      SamResourceId: SearchLayer

  FFmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-26b0jbb1cg8w
        Key: ffmpeg.zip
      RetentionPolicy: Retain
      LicenseInfo: GPL-2.0-or-later
    Metadata:
      SamResourceId: FFmpegLayer
  
  Mp4ParserLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-26b0jbb1cg8w
        Key: mp4parser-1.1a.zip
      RetentionPolicy: Retain
    Metadata:
      SamResourceId: Mp4ParserLayer
  
# --------------------------------------------------------------------------------- #
# Definitions About Roles for AWS Resources
# 1. TrimLookupFunctionExecutionRole
#   : TrimResultLookupFunction
#
# 2. LiveTrimFunctionExecutionRole
#   : LiveTrimYoutubeVideoFunction
#   
# 3. PreSignedURLGenerateFunctionExecutionRole
#   - PreSignedURLGenerateFunction
#
# 4. YoutubeVideoTrimStepFunctionRole
#   - YoutubeVideoTrimStateMachine
# --------------------------------------------------------------------------------- #

  TrimLookupFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TrimLookupFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TrimLookupFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: TrimResultLookupTableReadOnlyPolicy
                Effect: Allow
                Resource: !GetAtt TrimResultLookupTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
              - Sid: LambdaInvokeFunction
                Effect: Allow
                Resource: 
                  - !GetAtt LiveTrimYoutubeVideoFunctionSmall.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionMedium.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionLarge.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionXLarge.Arn
                  - !GetAtt PreSignedURLGenerateFunction.Arn
                Action:
                  - "lambda:InvokeFunction"
          
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  LiveTrimFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LiveTrimFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LiveTrimFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: TrimmedResultBucketReadWrite
                Effect: Allow
                Resource:
                  - !GetAtt 'TrimResultBucket.Arn'
                  - !Sub '${TrimResultBucket.Arn}/*'
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObjectAcl"
                
              - Sid: TrimResultLookupTableReadWriteItemPolicy
                Effect: Allow
                Resource: !GetAtt TrimResultLookupTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"

              - Sid: LambdaInvokeFunction
                Effect: Allow
                Resource: !GetAtt PreSignedURLGenerateFunction.Arn
                Action:
                  - "lambda:InvokeFunction"

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  PreSignedURLGenerateFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PreSignedURLGenerateFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaTrimmedResultBucketReadOnlyPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: LambdaTrimmedResultBucketReadOnly
                Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - !GetAtt TrimResultBucket.Arn
                  - !Sub '${TrimResultBucket.Arn}/*'

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"

  YoutubeVideoTrimStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: YoutubeVideoTrimStepFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: YoutubeVideoTrimStepFunctionLambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StepFunctionLambdaExecution
                Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt GetYoutubeVideoInfoFunction.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionSmall.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionMedium.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionLarge.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionXLarge.Arn
                  - !GetAtt PreSignedURLGenerateFunction.Arn
                  - !GetAtt TrimResultLookupFunction.Arn
                  - !GetAtt ErrorReceiveFunction.Arn
              - Sid: XRayAccessPolicy
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"


Outputs:
  YoutubeVideoTrimStateMachineArn:
    Description: Youtube Live Trim Function
    Value:
      Fn::GetAtt:
      - YoutubeVideoTrimStateMachine
      - Arn