AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for youtube downloader serverless backend'

# --------------------------------------------------------------------------------- #
# Global Variable About AWS Resources
# - Functions
#   : Lambda Function Default Memory Size & Timeout
# --------------------------------------------------------------------------------- #
Globals:
  Function:
    Timeout: 30
    MemorySize: 128


# --------------------------------------------------------------------------------- #

# --------------------------------------------------------------------------------- #

Parameters:
  VideoSavedBucketName:
    Type: String
    Default: trim-result-bucket
  TrackInfoSavedTableName:
    Type: String
    Default: TrackInfoSavedTable
  TrackInfoSavedTablePartitionKey:
    Type: String
    Default: VideoID
  TrackInfoSavedTableSortKey:
    Type: String
    Default: Track
  TrackInfoSavedTableGSI:
    Type: String
    Default: UniqueTrackID
  StepFunctionJobSavedTableName:
    Type: String
    Default: StepFunctionJobSavedTable
  StepFunctionJobSavedTablePartitionKey:
    Type: String
    Default: ExecutionID

Resources:
  VideoSavedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Ref VideoSavedBucketName
    Metadata:
      SamResourceId: VideoSavedBucket

  TrackInfoSavedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TrackInfoSavedTableName
      AttributeDefinitions:
        - AttributeName: !Ref TrackInfoSavedTablePartitionKey
          AttributeType: S
        - AttributeName: !Ref TrackInfoSavedTableSortKey
          AttributeType: S
        - AttributeName: !Ref TrackInfoSavedTableGSI
          AttributeType: S

      KeySchema:
        - AttributeName: !Ref TrackInfoSavedTablePartitionKey
          KeyType: HASH
        - AttributeName: !Ref TrackInfoSavedTableSortKey
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: !Ref TrackInfoSavedTableGSI
          KeySchema:
            - AttributeName: !Ref TrackInfoSavedTableGSI
              KeyType: HASH
          Projection:
            ProjectionType: ALL

      BillingMode: PAY_PER_REQUEST
  
  StepFunctionJobSavedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref StepFunctionJobSavedTableName
      AttributeDefinitions:
        - AttributeName: !Ref StepFunctionJobSavedTablePartitionKey
          AttributeType: S
        # - AttributeName: ExecutionArn
        #   AttributeType: S
        # - AttributeName: !Ref TrackInfoSavedTableGSI
        #   AttributeType: S
      
      KeySchema:
        - AttributeName: !Ref StepFunctionJobSavedTablePartitionKey
          KeyType: HASH
      
      BillingMode: PAY_PER_REQUEST

  YoutubeTrimFailedAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      FifoTopic: false
      TopicName: "YoutubeTrimFailedAlertTopic"
      DisplayName: "YoutubeTrimFailedAlertTopic"
      Subscription:
        - Endpoint: "orca_eaa5a@naver.com"
          Protocol: "email-json"
  
  BugReportTopic:
    Type: AWS::SNS::Topic
    Properties:
      FifoTopic: false
      TopicName: "BugReportTopic"
      DisplayName: "BugReportTopic"
      Subscription:
        - Endpoint: "orca_eaa5a@naver.com"
          Protocol: "email-json"


  EventBridgeToSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref YoutubeTrimFailedAlertTopic
      Topics: 
        - !Ref YoutubeTrimFailedAlertTopic 

  YoutubeTrimStateMachineMonitoringEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: "YoutubeTrimStateMachineMonitoringEvent"
      State: ENABLED
      Targets:
        - Arn: !Ref YoutubeTrimFailedAlertTopic
          Id: "YoutubeTrimFailedAlertTopic"
      EventBusName: "default"
      EventPattern:
        source:
          - "aws.states"
        detail-type:
          - "Step Functions Execution Status Change"
        detail:
          status:
            - FAILED
            - TIMED_OUT
            - ABORTED
          stateMachineArn: 
            - !GetAtt YoutubeVideoTrimStateMachine.Arn

  BugReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BugReportFunction
      CodeUri: functions/report-bug
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Environment:
        Variables:
          SNS_TOPIC_ARN:
            !Ref BugReportTopic

  GetTimestampsAboutYoutubeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTimestampsAboutYoutubeVideoFunction
      CodeUri: functions/get-timestamp-advanced
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer
    Metadata:
      SamResourceId: GetTimestampsAboutYoutubeVideoFunction

  GetYoutubeVideoInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetYoutubeVideoInfoFunction
      CodeUri: functions/search
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer

    Metadata:
      SamResourceId: GetYoutubeVideoInfoFunction

  VideoUrlGenerateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VideoUrlGenerateFunction
      CodeUri: functions/video-url-generator
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
    Metadata:
      SamResourceId: VideoUrlGenerateFunction

  ErrorReceiveFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ErrorReceiveFunction
      CodeUri: functions/err-receiver
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
    
    Metadata:
      SamResourceId: ErrorReceiveFunction

  TrackExtractStateMachineHealthcheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TrackExtractStateMachineHealthcheckFunction
      CodeUri: functions/statemachine-execution-healthcheck
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt TrackExtractStateMachineHealthcheckFunctionExecutionRole.Arn
      Environment:
        Variables:
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          STEPFUNCTION_JOB_SAVED_TABLE:
            !Ref StepFunctionJobSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
          STEPFUNCTION_JOB_SAVED_TABLE_PARTITION_KEY:
            !Ref StepFunctionJobSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
    Metadata:
      SamResourceId: TrackExtractStateMachineHealthcheckFunction
  
  TrackExtractStateMachineLaunchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TrackExtractStateMachineLaunchFunction
      CodeUri: functions/trim-statemachine-start
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt TrackExtractStateMachineLaunchFunctionExecutionRole.Arn
      Environment:
        Variables:
          STEPFUNCTION_JOB_SAVED_TABLE:
            !Ref StepFunctionJobSavedTableName
          STEPFUNCTION_JOB_SAVED_TABLE_PARTITION_KEY:
            !Ref StepFunctionJobSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
          STEPFUNCTION_ARN:
            !GetAtt YoutubeVideoTrimStateMachine.Arn
    Metadata:
      SamResourceId: TrackExtractStateMachineLaunchFunction
# --------------------------------------------------------------------------------- #
# Definitions About Lambda Function : LiveTrimYoutubeVideoFunction
# --------------------------------------------------------------------------------- #

  LiveTrimYoutubeVideoFunctionSmall:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionSmall
      Description: "Trim Function which process light mp4 media (MemorySize: 512)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 512
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          VIDEO_SAVED_BUCKET:
            !Ref VideoSavedBucketName
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref VideoSavedBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionSmall

  LiveTrimYoutubeVideoFunctionMedium:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionMedium
      Description: "Trim Function which process little heavy mp4 media (MemorySize: 1024)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 1024
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          VIDEO_SAVED_BUCKET:
            !Ref VideoSavedBucketName
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref VideoSavedBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionMedium

  LiveTrimYoutubeVideoFunctionLarge:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionLarge
      Description: "Trim Function which process more heavy mp4 media (MemorySize: 2048)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 2048
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          VIDEO_SAVED_BUCKET:
            !Ref VideoSavedBucketName
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref VideoSavedBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionLarge

  LiveTrimYoutubeVideoFunctionXLarge:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LiveTrimYoutubeVideoFunctionXLarge
      Description: "Trim Function which process very heavy mp4 media (MemorySize: 3008)"
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 3008
      Timeout: 600
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          VIDEO_SAVED_BUCKET:
            !Ref VideoSavedBucketName
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
          TRACKINFO_SAVED_TABLE_GSI:
            !Ref TrackInfoSavedTableGSI
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref VideoSavedBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunctionXLarge

# --------------------------------------------------------------------------------- #
# End
# --------------------------------------------------------------------------------- #

  TrimResultLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TrimResultLookupFunction
      CodeUri: functions/trim-result-lookup
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt TrimLookupFunctionExecutionRole.Arn
      Environment:
        Variables:
          TRACKINFO_SAVED_TABLE:
            !Ref TrackInfoSavedTableName
          TRACKINFO_SAVED_TABLE_PARTITION_KEY:
            !Ref TrackInfoSavedTablePartitionKey
          TRACKINFO_SAVED_TABLE_SORT_KEY:
            !Ref TrackInfoSavedTableSortKey
      
  YoutubeVideoTrackDownloadStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: YoutubeVideoTrackDownloadStateMachine
      StateMachineType: EXPRESS
      Definition:
        Comment: "Youtube Video Track Download Stepfunction Workflow"
        StartAt: TrackLookup
        States:
          TrackLookup:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt TrimResultLookupFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            Next:
              ErrorCheckBranch
          ErrorCheckBranch:
            Type: Choice
            Choices:
              - Variable: $.statusCode
                NumericEquals: 200
                Next: LookupResultCheckBranch
            Default: ErrReciver
          LookupResultCheckBranch:
            Type: Choice
            Choices:
              - Variable: $.body.success
                BooleanEquals: true
                Next: VideoUrlGenerate
              - Variable: $.body.success
                BooleanEquals: false
                Next: TrackExtractStateMachineLaunch
          TrackExtractStateMachineLaunch:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt TrackExtractStateMachineLaunchFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End:
              true
          ErrReciver:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt ErrorReceiveFunction.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End:
              true
          VideoUrlGenerate:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt VideoUrlGenerateFunction.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End:
              true
      RoleArn: !GetAtt YoutubeVideoTrackDownloadStepFunctionRole.Arn

  YoutubeVideoTrimStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: YoutubeVideoTrimStateMachine
      Definition:
        Comment: "Youtube Video Live Streaming Trimming Stepfunction Workflow"
        StartAt: TrimHandlingBranch
        States:
          TrimHandlingBranch:
            Type: Choice
            Choices:
              - Variable: $.body.data.m_duration
                NumericLessThan: 1800
                Next: TrimSmall
              - And:
                  - Variable: $.body.data.m_duration
                    NumericGreaterThanEquals: 1800
                  - Variable: $.body.data.m_duration
                    NumericLessThan: 3600
                Next: TrimMedium
              - And:
                  - Variable: $.body.data.m_duration
                    NumericGreaterThanEquals: 3600
                  - Variable: $.body.data.m_duration
                    NumericLessThan: 7200
                Next: TrimLarge
              - Variable: $.body.data.m_duration
                NumericGreaterThanEquals: 7200
                Next: TrimXLarge
          
          TrimSmall:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionSmall.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End: true

          TrimMedium:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionMedium.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End: true

          TrimLarge:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionLarge.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End: true

          TrimXLarge:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunctionXLarge.Arn
            Retry:
              - ErrorEquals:
                - "Lambda.ServiceException"
                - "Lambda.AWSLambdaException"
                MaxAttempts: 0
            End: true
      RoleArn: !GetAtt YoutubeVideoTrimStepFunctionRole.Arn
      
  SearchLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layer/search-layer
      CompatibleRuntimes:
      - python3.9
    Metadata:
      BuildMethod: python3.9
      SamResourceId: SearchLayer

  FFmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-26b0jbb1cg8w
        Key: ffmpeg.zip
      RetentionPolicy: Retain
      LicenseInfo: GPL-2.0-or-later
    Metadata:
      SamResourceId: FFmpegLayer
  
  Mp4ParserLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-26b0jbb1cg8w
        Key: mp4parser-1.1a.zip
      RetentionPolicy: Retain
    Metadata:
      SamResourceId: Mp4ParserLayer
  
# --------------------------------------------------------------------------------- #

# --------------------------------------------------------------------------------- #

  BugReportFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BugReportFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      # Policies:
      #   - PolicyName: LambdaSNSTopicPublishPolicy
      #     PolicyDocument:
      #       Version: 2012-10-17
      #       Statement:
      #         - Sid: SNSTopicPublishPolicy
      #           Effect: Allow
      #           Resource: !GetAtt BugReportTopic.Arn
      #           Action:
      #             - "sns:Publish"
          
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  TrimLookupFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TrimLookupFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TrimLookupFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: TrackInfoSavedTableReadOnlyPolicy
                Effect: Allow
                Resource: !GetAtt TrackInfoSavedTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
          
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  LiveTrimFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LiveTrimFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LiveTrimFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: VideoSavedBucketReadWrite
                Effect: Allow
                Resource:
                  - !GetAtt 'VideoSavedBucket.Arn'
                  - !Sub '${VideoSavedBucket.Arn}/*'
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObjectAcl"
                
              - Sid: TrackInfoSavedTableReadWriteItemPolicy
                Effect: Allow
                Resource: !GetAtt TrackInfoSavedTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  TrackExtractStateMachineLaunchFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TrackExtractStateMachineLaunchFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TrackExtractStateMachineLaunchFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StepFunctionLaunchPolicy
                Effect: Allow
                Resource: !GetAtt YoutubeVideoTrimStateMachine.Arn
                Action:
                  - "states:StopExecution"
                  - "states:StartExecution"
                  - "states:StartSyncExecution"

              - Sid: StepFunctionJobSavedTableWritePolicy
                Effect: Allow
                Resource: !GetAtt StepFunctionJobSavedTable.Arn
                Action:
                  - "dynamodb:PutItem"

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  TrackExtractStateMachineHealthcheckFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TrackExtractStateMachineHealthcheckFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TrackExtractStateMachineHealthcheckFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ExecutionDescribePolicy
                Effect: Allow
                Resource: "*"
                Action:
                  - "states:DescribeExecution"

              - Sid: TrackInfoSavedTableReadPolicy
                Effect: Allow
                Resource: 
                  - !GetAtt TrackInfoSavedTable.Arn
                  - !Sub '${TrackInfoSavedTable.Arn}/*'
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
              
              - Sid: StepFunctionJobSavedTableReadDeletePolicy
                Effect: Allow
                Resource: !GetAtt StepFunctionJobSavedTable.Arn
                Action:
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"


  YoutubeVideoTrackDownloadStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: YoutubeVideoTrackDownloadStepFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: YoutubeVideoTrimStepFunctionLambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StepFunctionLambdaExecution
                Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt TrimResultLookupFunction.Arn
                  - !GetAtt TrackExtractStateMachineLaunchFunction.Arn
                  - !GetAtt VideoUrlGenerateFunction.Arn
                  - !GetAtt ErrorReceiveFunction.Arn

              - Sid: XRayAccessPolicy
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"

  YoutubeVideoTrimStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: YoutubeVideoTrimStepFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: YoutubeVideoTrimStepFunctionLambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StepFunctionLambdaExecution
                Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt LiveTrimYoutubeVideoFunctionSmall.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionMedium.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionLarge.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunctionXLarge.Arn

              - Sid: XRayAccessPolicy
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"


Outputs:
  YoutubeVideoTrimStateMachineArn:
    Description: Youtube Live Trim Function
    Value: !GetAtt YoutubeVideoTrimStateMachine.Arn
