AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Sample SAM Template for youtube downloader serverless backend

  '
Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Parameters:
  TrimmedResultBucketName:
    Type: String
    Default: trim-result-bucket
  TrimCacheDynTableName:
    Type: String
    Default: trim-result-lookup-table
  TrimCacheDynTablePartitionKey:
    Type: String
    Default: VideoId
  TrimCacheDynTableSortKey:
    Type: String
    Default: Track

Resources:
  
  TrimResultBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Ref TrimmedResultBucketName
    Metadata:
      SamResourceId: TrimResultBucket
  
  TrimResultLookupTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TrimCacheDynTableName
      AttributeDefinitions:
        - AttributeName: !Ref TrimCacheDynTablePartitionKey
          AttributeType: S
        - AttributeName: !Ref TrimCacheDynTableSortKey
          AttributeType: S
        # - AttributeName: BucketName
        #   AttributeType: S
        # - AttributeName: S3Key
        #   AttributeType: S

      KeySchema:
        - AttributeName: !Ref TrimCacheDynTablePartitionKey
          KeyType: HASH
        - AttributeName: !Ref TrimCacheDynTableSortKey
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  
  TrimLookupFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TrimLookupFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TrimLookupFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: TrimResultLookupTableReadOnlyPolicy
                Effect: Allow
                Resource: !GetAtt TrimResultLookupTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
              - Sid: LambdaInvokeFunction
                Effect: Allow
                Resource: 
                  - !GetAtt LiveTrimYoutubeVideoFunction.Arn
                  - !GetAtt PreSignedURLGenerateFunction.Arn
                Action:
                  - "lambda:InvokeFunction"
          
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  LiveTrimFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LiveTrimFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LiveTrimFunctionExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: TrimmedResultBucketReadWrite
                Effect: Allow
                Resource:
                  - !GetAtt 'TrimResultBucket.Arn'
                  - !Sub '${TrimResultBucket.Arn}/*'
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObjectAcl"
                
              - Sid: TrimResultLookupTableReadWriteItemPolicy
                Effect: Allow
                Resource: !GetAtt TrimResultLookupTable.Arn
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"

              - Sid: LambdaInvokeFunction
                Effect: Allow
                Resource: !GetAtt PreSignedURLGenerateFunction.Arn
                Action:
                  - "lambda:InvokeFunction"

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  PreSignedURLGenerateFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PreSignedURLGenerateFunctionExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaTrimmedResultBucketReadOnlyPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: LambdaTrimmedResultBucketReadOnly
                Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - !GetAtt TrimResultBucket.Arn
                  - !Sub '${TrimResultBucket.Arn}/*'

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"

  YoutueVideoTrimStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: YoutueVideoTrimStepFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: YoutueVideoTrimStepFunctionLambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StepFunctionLambdaExecution
                Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt GetYoutubeVideoInfoFunction.Arn
                  - !GetAtt LiveTrimYoutubeVideoFunction.Arn
                  - !GetAtt PreSignedURLGenerateFunction.Arn
                  - !GetAtt TrimResultLookupFunction.Arn
              - Sid: XRayAccessPolicy
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"


  GetTimestampsAboutYoutubeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-timestamp-advanced
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer
    Metadata:
      SamResourceId: GetTimestampsAboutYoutubeVideoFunction

  GetYoutubeVideoInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/search
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Layers:
        - !Ref SearchLayer

    Metadata:
      SamResourceId: GetYoutubeVideoInfoFunction
  
  LiveTrimYoutubeVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/livetrim
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt LiveTrimFunctionExecutionRole.Arn
      MemorySize: 256
      Layers:
        - !Ref FFmpegLayer
        - !Ref Mp4ParserLayer
      
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey
          
      Policies:
      - S3CrudPolicy:
          BucketName:
            !Ref TrimmedResultBucketName

    Metadata:
      SamResourceId: LiveTrimYoutubeVideoFunction
  
  PreSignedURLGenerateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/p-signed-generator
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt PreSignedURLGenerateFunctionExecutionRole.Arn
      Environment:
        Variables:
          TrimmedResultBucket:
            !Ref TrimmedResultBucketName

      Policies:
        - S3CrudPolicy:
            BucketName:
              !Ref TrimmedResultBucketName

  TrimResultLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/trim-result-lookup
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: !GetAtt TrimLookupFunctionExecutionRole.Arn
      Environment:
        Variables:
          TrimCacheDynDB:
            !Ref TrimCacheDynTableName
          TrimCacheDynTablePartitionKey:
            !Ref TrimCacheDynTablePartitionKey
          TrimCacheDynTableSortKey:
            !Ref TrimCacheDynTableSortKey

  YoutubeVideoTrimStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: YoutubeVideoTrimStateMachine
      StateMachineType: EXPRESS
      Definition:
        Comment: "Youtube Video Live Streaming Trimming Stepfunction Workflow"
        StartAt: TrimResultLookup
        States:
          TrimResultLookup:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt TrimResultLookupFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                IntervalSeconds: 2
                MaxAttempts: 2
                BackoffRate: 2
            Next:
              LookupBranch

          LookupBranch:
            Type: Choice
            Choices:
              - Variable: "$.body.exist"
                BooleanEquals: true
                Next: PreSignedURLGenerate
              - Variable: "$.body.exist"
                BooleanEquals: false
                Next: LiveTrim

          LiveTrim:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt LiveTrimYoutubeVideoFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                IntervalSeconds: 2
                MaxAttempts: 2
                BackoffRate: 2
            Next: PreSignedURLGenerate

          PreSignedURLGenerate:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: !GetAtt PreSignedURLGenerateFunction.Arn
            Retry:
              - ErrorEquals:
                  - "Lambda.ServiceException"
                  - "Lambda.AWSLambdaException"
                IntervalSeconds: 2
                MaxAttempts: 2
                BackoffRate: 2
            End:
              true
      RoleArn: !GetAtt YoutueVideoTrimStepFunctionRole.Arn
      
  SearchLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layer/search-layer
      CompatibleRuntimes:
      - python3.9
    Metadata:
      BuildMethod: python3.9
      SamResourceId: SearchLayer

  FFmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-a44pg41y2qcm
        Key: ffmpeg.zip
      RetentionPolicy: Retain
      LicenseInfo: GPL-2.0-or-later
    Metadata:
      SamResourceId: FFmpegLayer
  
  Mp4ParserLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
      - python3.9
      ContentUri:
        Bucket: aws-sam-cli-managed-default-samclisourcebucket-a44pg41y2qcm
        Key: mp4parser-1.0a.zip
      RetentionPolicy: Retain
    Metadata:
      SamResourceId: Mp4ParserLayer

Outputs:
  YoutubeVideoTrimStateMachineArn:
    Description: Youtube Live Trim Function
    Value:
      Fn::GetAtt:
      - YoutubeVideoTrimStateMachine
      - Arn